{"version":3,"sources":["components/card-list/card-list.module.css","components/card/card.module.css","components/search-box/search-box.module.css","assets/images sync /^/.*/.png$","assets/images/1.png","assets/images/10.png","assets/images/2.png","assets/images/3.png","assets/images/4.png","assets/images/5.png","assets/images/6.png","assets/images/7.png","assets/images/8.png","assets/images/9.png","components/card/card.component.tsx","components/card-list/card-list.component.tsx","util/utilities.ts","components/search-box/search-box.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Card","props","className","styles","alt","robot","src","require","name","email","CardList","robots","key","Math","random","toString","replace","SearchBox","type","placeholder","placeHolder","value","searchField","onChange","changeHandler","App","state","title","event","preventDefault","this","setState","target","console","log","fetch","then","response","json","users","item","filteredRobots","filter","toLowerCase","includes","onChangeHandler","bind","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1bb5bd44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-list\":\"card-list_card-list__1auyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-container\":\"card_card-container__2hnvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"search-box_search__1v148\"};","var map = {\n\t\"./1.png\": 18,\n\t\"./10.png\": 19,\n\t\"./2.png\": 20,\n\t\"./3.png\": 21,\n\t\"./4.png\": 22,\n\t\"./5.png\": 23,\n\t\"./6.png\": 24,\n\t\"./7.png\": 25,\n\t\"./8.png\": 26,\n\t\"./9.png\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/1.0edc7548.png\";","module.exports = __webpack_public_path__ + \"static/media/10.ebf120cf.png\";","module.exports = __webpack_public_path__ + \"static/media/2.ce05a341.png\";","module.exports = __webpack_public_path__ + \"static/media/3.d5cd9590.png\";","module.exports = __webpack_public_path__ + \"static/media/4.64a79987.png\";","module.exports = __webpack_public_path__ + \"static/media/5.3c592722.png\";","module.exports = __webpack_public_path__ + \"static/media/6.9edd14c8.png\";","module.exports = __webpack_public_path__ + \"static/media/7.ab4bb55e.png\";","module.exports = __webpack_public_path__ + \"static/media/8.308fe317.png\";","module.exports = __webpack_public_path__ + \"static/media/9.f9da866f.png\";","/**\r\n * @fileoverview card component \r\n */\r\nimport React from \"react\";\r\nimport styles from \"./card.module.css\";\r\nimport { Robot } from \"../../types/robot-type\";\r\n// import logo from \"../../assets/images/1.png\";\r\n\r\ninterface Props {\r\n  robot: Robot\r\n}\r\nexport const Card: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className={styles[\"card-container\"]}>\r\n      {/* <img\r\n        alt={`monster ${props.monster.id}`}\r\n        src={`https://robohash.org/${props.monster.id}?set=set3&size=180x180`} /> */}\r\n      <img\r\n        alt={`monster ${props.robot.id}`}\r\n        src={require(`../../assets/images/${props.robot.id}.png`)} />\r\n      <h2>{props.robot.name}</h2>\r\n      <p>{props.robot.email}</p>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * @fileoverview Card list component\r\n */\r\nimport React from \"react\";\r\nimport styles from \"./card-list.module.css\";\r\nimport { Card } from \"../card/card.component\";\r\nimport { Robot } from \"../../types/robot-type\";\r\nimport { id } from \"../../util/utilities\";\r\n\r\ninterface Props {\r\n  robots: Robot[]\r\n}\r\nexport const CardList: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className={styles[\"card-list\"]}>\r\n      {/* {props.children} */}\r\n      {\r\n        props.robots.map(robot => <Card key={id()} robot={robot} />)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * @fileoverview JavaScript utilities\r\n * \r\n */\r\n\r\n/**\r\n * @returns {string} random id as key\r\n */\r\nexport function id(): string {\r\n\treturn (Math.random() * 997).toString(36).replace('.', '');\r\n}\r\n","/**\r\n * @fileoverview search box component\r\n */\r\nimport React from \"react\";\r\nimport styles from \"./search-box.module.css\";\r\n\r\ninterface Props {\r\n  placeHolder: string,\r\n  searchField: string,\r\n  changeHandler: (event: React.ChangeEvent<HTMLInputElement>) => void,\r\n}\r\nexport const SearchBox: React.FC<Props> = (props) => {\r\n  return (\r\n    <input\r\n      className={styles[\"search\"]}\r\n      type=\"search\"\r\n      placeholder={props.placeHolder}\r\n      value={props.searchField}\r\n      onChange={props.changeHandler} />\r\n  );\r\n};\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport { Robot } from \"./types/robot-type\";\n\ninterface Props { }\ninterface State {\n  title: string,\n  searchField: string,\n  robots: Robot[]\n}\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      title: \"How are you?\",\n      searchField: \"\",\n      robots: []\n    }\n  }\n\n  onClickHandler(event: React.MouseEvent) {\n    event.preventDefault();\n    this.setState({ title: \"fine, thanks\" });\n  }\n\n  onChangeHandler(event: React.ChangeEvent<HTMLInputElement>) {\n    event.preventDefault();\n    this.setState(\n      {\n        searchField: event.target.value,\n        title: event.target.value\n      }, () => console.log(this.state));\n  }\n\n  /**\n   * life cycle in creation flow \n   */\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then((users: any[]) => {\n        this.setState({\n          robots: users.map(item => ({\n            id: item.id,\n            name: item.name,\n            email: item.email\n          }))\n        })\n      });\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter(\n      robot => robot.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Robots Rolodex</h1>\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div>{this.state.title}</div>\n          <button onClick={() => { this.setState({ title: \"fine\" }) }}>Click</button>\n          <button onClick={this.onClickHandler.bind(this)}>Click</button>\n          <button onClick={(event) => this.onClickHandler(event)}>Click</button>\n        </header> */}\n        {/* <input\n          type=\"search\"\n          placeholder=\"search monster\"\n          value={searchField}\n          onChange={this.onChangeHandler.bind(this)} /> */}\n        <SearchBox\n          searchField={searchField}\n          placeHolder=\"search robot\"\n          changeHandler={this.onChangeHandler.bind(this)} />\n        <CardList robots={filteredRobots}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}