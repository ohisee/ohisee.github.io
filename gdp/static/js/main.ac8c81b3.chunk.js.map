{"version":3,"sources":["components/Layout.module.css","components/Charts/TimeseriesLine.module.css","components/Charts/Bars.module.css","components/Charts/MultiLines.module.css","components/Charts/Pie.module.css","components/UI/SideBar.module.css","components/UI/BulletPoint.module.css","components/UI/BarsButton.module.css","components/UI/Spinner.module.css","store/actions/actionTypes.tsx","store/reducers/index.tsx","store/reducers/VerifyAuth.ts","store/reducers/FetchCountries.ts","store/reducers/FetchData.ts","store/index.tsx","store/actions/index.tsx","components/UI/BarsButton.tsx","components/UI/Spinner.tsx","components/random.ts","components/UI/SideBar.tsx","components/Charts/TimeseriesLine.tsx","components/Charts/BackupTimeseriesLine.tsx","components/Charts/Pie.tsx","components/Charts/BackupPie.tsx","components/Charts/Bars.tsx","components/Charts/BackupBars.tsx","components/UI/BulletPoint.tsx","components/Charts/MultiLines.tsx","components/Charts/BackupMultiLines.tsx","components/Layout.tsx","App.tsx","index.tsx"],"names":["module","exports","row","col1","col3","col4","col5","col6","col7","col8","col9","col10","col11","col12","col2","col2Open","inputArea","sideBarMenu","mainContent","charts","lineChart","initial-content","title","line","axisX","axisY","dots","barChart","barNegative","barPositive","pieChart","polylines","labelText","sideBar","items","item","bulletPoint","bars","loader","spin","Types","Object","freeze","START_SPINNER","STOP_SPINNNER","START_SIGNIN","VERIFY_SUCCEEDED","VERIFY_FAILED","INVALDIATE_AUTH","START_FETCHING","FETCH_SUCCEEDED","FETCH_FAILED","FETCH_DATA_START","FETCH_DATA_SUCCEEDED","FETCH_DATA_FAILED","FETCH_GDP_GROWTH_DATA_START","FETCH_GDP_GROWTH_DATA_SUCCEEDED","FETCH_GDP_GROWTH_DATA_FAILED","FETCH_POP_GROWTH_DATA_START","FETCH_POP_GROWTH_DATA_SUCCEEDED","FETCH_POP_GROWTH_DATA_FAILED","FETCH_GDP_DATA_START","FETCH_GDP_DATA_SUCCEEDED","FETCH_GDP_DATA_FAILED","FETCH_PRICING_DATA_START","FETCH_PRICING_DATA_SUCCEEDED","FETCH_PRICING_DATA_FAILED","FETCH_INFLATION_DATA_START","FETCH_INFLATION_DATA_SUCCEEDED","FETCH_INFLATION_DATA_FAILED","FETCH_EXPANSE_DATA_START","FETCH_EXPANSE_DATA_SUCCEEDED","FETCH_EXPANSE_DATA_FAILED","FETCH_PRICE_DEFLATOR_DATA_START","FETCH_PRICE_DEFLATOR_DATA_SUCCEEDED","FETCH_PRICE_DEFLATOR_DATA_FAILED","initialState","spinning","message","reducer","state","arguments","length","undefined","action","type","objectSpread","payload","verifying","token","error","loading","countries","concat","countryGdpGrowthData","countryPopGrowthData","countryGdpData","countryPricingData","countryInflationData","countryExpanseData","countryPriceDeflatorData","store","createStore","combineReducers","spinnerState","SpinnerReducer","verifyAuthState","VerifyAuthReducer","fetchCountriesState","FetchCountriesReducer","fetchDataState","FetchDataReducer","applyMiddleware","thunkMiddleware","fetchGdpGrowthActions","start","succeeded","countryData","failed","errMsg","buildAction","startActionType","succeededActionType","failedActionType","fetchPricingActions","fetchInflationActions","fetchGdpActions","fetchPopGrowthActions","fetchExpanseActions","fetchPriceDeflatorActions","storeInSesssion","key","data","sessionStorage","setItem","JSON","stringify","getSession","getItem","parse","fetchCountriesSucceeded","apiGetCountries","page","axios","get","params","format","apiFetchData","country","indicator","apiUrl","fetchData2","fetchActions","_ref5","asyncToGenerator","regenerator_default","a","mark","_callee5","dispatch","res","pageInfo","t","wrap","_context5","prev","next","sent","pages","push","apply","toConsumableArray","t0","stop","_x5","this","BarsButton","props","react_default","createElement","className","Styles","onClick","clicked","Spinner","SpinnerStyles","int","randomId","Math","random","toString","replace","SideBar","listItems","map","d","id","name","TimeseriesLine","height","margin","top","bottom","width","left","right","x","scaleTime","y","scaleLinear","_extent","extent","_extent2","slicedToArray","minDate","maxDate","_extent3","value","_extent4","minY","maxY","xTimeScale","domain","range","nice","yNumberScale","customYaxis","svg","yValueFormat","yAxis","axisLeft","ticks","tickSize","tickFormat","call","customXaxis","xAxis","axisBottom","timeYear","every","timeYearInterval","selectAll","style","attr","pathLine","xd","yd","createTimeseriesPath","timeseriesLine","dataPoints","cx","cy","r","createDataPoints","Fragment","xmlns","xmlnsXlink","transform","showXaxis","ref","el","select","showYaxis","BackupTimeseriesLine","init","i","Date","Charts_TimeseriesLine","Pie","radius","min","pieGen","pie","sort","arcGen","arc","innerRadius","outerRadius","outerArcGen","midAngle","startAngle","endAngle","arcs","_pieGen","target","_pieGen$map","_pieGen$map2","p","other","posZero","PI","labelAnchor","els","pos","centroid","pts","fill","points","join","dy","dx","textAnchor","createArcs","BackupPie","todayYear","getFullYear","Charts_Pie","Bars","scaleBand","minValue","maxValue","xtime","b","String","paddingInner","xBandScale","bandwidth","abs","createRects","BackupBars","Charts_Bars","BulletPoint","background","color","MultiLines","dataNest","nest","entries","scaleOrdinal","schemeCategory10","lines","forEach","l","values","titles","UI_BulletPoint","stroke","BackupMultiLines","Charts_MultiLines","connect","loadingCountries","getCountries","_ref3","_callee3","_context3","_x3","getCountryGdpGrowthData","getCountryPopGrowthData","getCountryGdpData","getCountryPricingData","getCountryInflationData","getCountryExpanseData","getCountryPriceDeflatorData","_useState","useState","_useState2","sideBarOpen","setSideBarOpen","useEffect","clickedHandler","createLineChart","chartData","info","date","Charts_BackupTimeseriesLine","UI_BarsButton","UI_Spinner","UI_SideBar","iso2Code","year","find","Charts_BackupPie","createPieChart","Charts_BackupBars","createbarChart","chartDataT","chartDataC","c","Charts_BackupMultiLines","createMultLinesChart","App","components_Layout","app","es","react_router_dom","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac8c81b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Layout_row__1AvHx\",\"col1\":\"Layout_col1__m4VdN\",\"col3\":\"Layout_col3__13O8P\",\"col4\":\"Layout_col4__1VC22\",\"col5\":\"Layout_col5___1gFq\",\"col6\":\"Layout_col6___mMBD\",\"col7\":\"Layout_col7__lwICz\",\"col8\":\"Layout_col8__2Bayk\",\"col9\":\"Layout_col9__25IgI\",\"col10\":\"Layout_col10__1jwvd\",\"col11\":\"Layout_col11__q2eic\",\"col12\":\"Layout_col12__1b9dG\",\"col2\":\"Layout_col2__rPuhf\",\"col2Open\":\"Layout_col2Open__21ZA7\",\"inputArea\":\"Layout_inputArea__2sayI\",\"sideBarMenu\":\"Layout_sideBarMenu__Fq0fC\",\"mainContent\":\"Layout_mainContent__3bcdx\",\"charts\":\"Layout_charts__3evDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineChart\":\"TimeseriesLine_lineChart__ESZaR\",\"initial-content\":\"TimeseriesLine_initial-content__1l-_q\",\"title\":\"TimeseriesLine_title__3b4VM\",\"line\":\"TimeseriesLine_line__3-nJP\",\"axisX\":\"TimeseriesLine_axisX__23r-y\",\"axisY\":\"TimeseriesLine_axisY__22POK\",\"dots\":\"TimeseriesLine_dots__3KqR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barChart\":\"Bars_barChart__3Kptz\",\"title\":\"Bars_title__3MhzE\",\"barNegative\":\"Bars_barNegative__KJFSC\",\"barPositive\":\"Bars_barPositive__2WZaz\",\"axisY\":\"Bars_axisY__2gIqS\",\"axisX\":\"Bars_axisX__37MMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineChart\":\"MultiLines_lineChart__gepFY\",\"initial-content\":\"MultiLines_initial-content__2csvj\",\"title\":\"MultiLines_title__2A_H8\",\"line\":\"MultiLines_line__2WOud\",\"axisX\":\"MultiLines_axisX__U1n0o\",\"axisY\":\"MultiLines_axisY__2AXEC\",\"dots\":\"MultiLines_dots__2OvZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieChart\":\"Pie_pieChart__2yyS0\",\"title\":\"Pie_title__1Shor\",\"polylines\":\"Pie_polylines__z_zr5\",\"labelText\":\"Pie_labelText__3N2Oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SideBar_sideBar__1MIps\",\"items\":\"SideBar_items__1AtYi\",\"item\":\"SideBar_item__2aazA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BulletPoint_title__16ROy\",\"bulletPoint\":\"BulletPoint_bulletPoint__1dXs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bars\":\"BarsButton_bars__16B94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__ojX8t\",\"spin\":\"Spinner_spin__1tFF1\"};","/**\r\n * @fileoverview Action type\r\n */\r\ntype ActionTypes = {\r\n  START_SPINNER: string,\r\n  STOP_SPINNNER: string,\r\n  START_SIGNIN: string,\r\n  VERIFY_SUCCEEDED: string,\r\n  VERIFY_FAILED: string,\r\n  INVALDIATE_AUTH: string,\r\n  START_FETCHING: string,\r\n  FETCH_SUCCEEDED: string,\r\n  FETCH_FAILED: string,\r\n  FETCH_DATA_START: string,\r\n  FETCH_DATA_SUCCEEDED: string,\r\n  FETCH_DATA_FAILED: string,\r\n  FETCH_GDP_GROWTH_DATA_START: string,\r\n  FETCH_GDP_GROWTH_DATA_SUCCEEDED: string,\r\n  FETCH_GDP_GROWTH_DATA_FAILED: string,\r\n  FETCH_POP_GROWTH_DATA_START: string,\r\n  FETCH_POP_GROWTH_DATA_SUCCEEDED: string,\r\n  FETCH_POP_GROWTH_DATA_FAILED: string,\r\n  FETCH_GDP_DATA_START: string,\r\n  FETCH_GDP_DATA_SUCCEEDED: string,\r\n  FETCH_GDP_DATA_FAILED: string,\r\n  FETCH_PRICING_DATA_START: string,\r\n  FETCH_PRICING_DATA_SUCCEEDED: string,\r\n  FETCH_PRICING_DATA_FAILED: string,\r\n  FETCH_INFLATION_DATA_START: string,\r\n  FETCH_INFLATION_DATA_SUCCEEDED: string,\r\n  FETCH_INFLATION_DATA_FAILED: string,\r\n  FETCH_PRICE_DEFLATOR_DATA_START: string,\r\n  FETCH_PRICE_DEFLATOR_DATA_SUCCEEDED: string,\r\n  FETCH_PRICE_DEFLATOR_DATA_FAILED: string,\r\n  FETCH_EXPANSE_DATA_START: string,\r\n  FETCH_EXPANSE_DATA_SUCCEEDED: string,\r\n  FETCH_EXPANSE_DATA_FAILED: string,\r\n};\r\nexport const Types: Readonly<ActionTypes> = Object.freeze({\r\n  START_SPINNER: \"[action]_start_spining\",\r\n  STOP_SPINNNER: \"[action]_stop_spinning\",\r\n  START_SIGNIN: \"[action]_start_signin\",\r\n  VERIFY_SUCCEEDED: \"[action]_signin_succeeded\",\r\n  VERIFY_FAILED: \"[action]_signin_failed\",\r\n  INVALDIATE_AUTH: \"[action]_invalidate_auth\",\r\n  START_FETCHING: \"[action]_start_fetching\",\r\n  FETCH_SUCCEEDED: \"[action]_fetch_succeeded\",\r\n  FETCH_FAILED: \"[action]_fetch_failed\",\r\n  FETCH_DATA_START: \"[action]_fetch_data_start\",\r\n  FETCH_DATA_SUCCEEDED: \"[action]_fetch_data_succeeded\",\r\n  FETCH_DATA_FAILED: \"[action]_fetch_data_failed\",\r\n  FETCH_GDP_GROWTH_DATA_START: \"[action]_fetch_gdp_growth_data_start\",\r\n  FETCH_GDP_GROWTH_DATA_SUCCEEDED: \"[action]_fetch_gdp_growth_data_succeeded\",\r\n  FETCH_GDP_GROWTH_DATA_FAILED: \"[action]_fetch_gdp_growth_data_failed\",\r\n  FETCH_POP_GROWTH_DATA_START: \"[action]_fetch_pop_growth_data_start\",\r\n  FETCH_POP_GROWTH_DATA_SUCCEEDED: \"[action]_fetch_pop_growth_data_succeeded\",\r\n  FETCH_POP_GROWTH_DATA_FAILED: \"[action]_fetch_pop_growth_data_failed\",\r\n  FETCH_GDP_DATA_START: \"[action]_fetch_gdp_data_start\",\r\n  FETCH_GDP_DATA_SUCCEEDED: \"[action]_fetch_gdp_data_succeeded\",\r\n  FETCH_GDP_DATA_FAILED: \"[action]_fetch_gdp_data_failed\",\r\n  FETCH_PRICING_DATA_START: \"[action]_fetch_pricing_data_start\",\r\n  FETCH_PRICING_DATA_SUCCEEDED: \"[action]_fetch_pricing_data_succeeded\",\r\n  FETCH_PRICING_DATA_FAILED: \"[action]_fetch_pricing_data_failed\",\r\n  FETCH_INFLATION_DATA_START: \"[action]_fetch_inflation_data_start\",\r\n  FETCH_INFLATION_DATA_SUCCEEDED: \"[action]_fetch_inflation_data_succeeded\",\r\n  FETCH_INFLATION_DATA_FAILED: \"[action]_fetch_inflation_data_failed\",\r\n  FETCH_EXPANSE_DATA_START: \"[action]_fetch_expanse_data_start\",\r\n  FETCH_EXPANSE_DATA_SUCCEEDED: \"[action]_fetch_expanse_data_succeeded\",\r\n  FETCH_EXPANSE_DATA_FAILED: \"[action]_fetch_expanse_data_failed\",\r\n  FETCH_PRICE_DEFLATOR_DATA_START: \"[action]_fetch_price_deflator_data_start\",\r\n  FETCH_PRICE_DEFLATOR_DATA_SUCCEEDED: \"[action]_fetch_price_deflator_data_succeeded\",\r\n  FETCH_PRICE_DEFLATOR_DATA_FAILED: \"[action]_fetch_price_deflator_data_failed\",\r\n});\r\n\r\n/**\r\n * Payload type\r\n */\r\ntype PayloadType<T> = T;\r\n\r\n/**\r\n * Action type\r\n */\r\ninterface Action {\r\n  type: string,\r\n  payload: PayloadType<any>\r\n};\r\n\r\n/**\r\n * Action interface as a type\r\n */\r\nexport interface Actions extends Action { }\r\n","/**\r\n * @fileoverview Reducer index\r\n */\r\nimport { Actions, Types } from \"../actions/actionTypes\";\r\n\r\nexport interface SpinningState {\r\n  spinning: boolean,\r\n  message: string,\r\n};\r\n\r\nconst initialState: SpinningState = {\r\n  spinning: false,\r\n  message: 'init',\r\n};\r\n\r\n/**\r\n *  Reducer\r\n */\r\nconst reducer = (state = initialState, action: Actions): SpinningState => {\r\n  switch (action.type) {\r\n    case Types.START_SPINNER:\r\n      return {\r\n        ...state,\r\n        spinning: true,\r\n        message: action.payload,\r\n      };\r\n    case Types.STOP_SPINNNER:\r\n      return {\r\n        ...state,\r\n        spinning: false,\r\n        message: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/**\r\n * @fileoverview Verify authencation reducer\r\n */\r\nimport {Actions, Types} from \"../actions/actionTypes\";\r\n\r\nexport interface VerifyAuthState {\r\n  verifying: boolean,\r\n  token: string | null,\r\n  error: string | null,\r\n}\r\n\r\nconst initialState: VerifyAuthState = {\r\n  verifying: false,\r\n  token: null,\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action: Actions): VerifyAuthState => {\r\n  switch (action.type) {\r\n    case Types.START_SIGNIN:\r\n      return {\r\n        ...state,\r\n        verifying: true,\r\n        token: null,\r\n        error: null,\r\n      }\r\n    case Types.VERIFY_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        token: action.payload,\r\n        error: null,\r\n      };\r\n    case Types.VERIFY_FAILED:\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        token: null,\r\n        error: action.payload,\r\n      };\r\n    case Types.INVALDIATE_AUTH:\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        token: null,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/**\r\n * @fileoverview Fetch countries action reducer\r\n */\r\nimport { CountryInfo } from \"../actions\";\r\nimport { Actions, Types } from \"../actions/actionTypes\";\r\n\r\nexport interface FetchCountriesState {\r\n  loading: boolean,\r\n  countries: CountryInfo[]\r\n  error: string | null\r\n};\r\n\r\nconst initialState: FetchCountriesState = {\r\n  loading: false,\r\n  countries: [],\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action: Actions): FetchCountriesState => {\r\n  switch (action.type) {\r\n    case Types.START_FETCHING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case Types.FETCH_SUCCEEDED: {\r\n      return {\r\n        ...state,\r\n        countries: state.countries.concat(action.payload),\r\n        loading: false,\r\n        error: null,\r\n      }\r\n    }\r\n    case Types.FETCH_FAILED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","/**\r\n * @fileoverview Fetch data reducer\r\n */\r\nimport { CountryData } from \"../actions\";\r\nimport { Actions, Types } from \"../actions/actionTypes\";\r\n\r\nexport interface FetchDataState {\r\n  countryGdpGrowthData: CountryData[],\r\n  countryPopGrowthData: CountryData[],\r\n  countryGdpData: CountryData[],\r\n  countryPricingData: CountryData[],\r\n  countryInflationData: CountryData[],\r\n  countryPriceDeflatorData: CountryData[],\r\n  countryExpanseData: CountryData[],\r\n  loading: boolean,\r\n  error: string | null,\r\n}\r\n\r\nconst initialState: FetchDataState = {\r\n  countryGdpGrowthData: [],\r\n  countryPopGrowthData: [],\r\n  countryGdpData: [],\r\n  countryPricingData: [],\r\n  countryInflationData: [],\r\n  countryExpanseData: [],\r\n  countryPriceDeflatorData: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action: Actions): FetchDataState => {\r\n  switch (action.type) {\r\n    case Types.FETCH_GDP_DATA_START:\r\n      return {\r\n        ...state,\r\n        countryGdpData: [],\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case Types.FETCH_GDP_DATA_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        countryGdpData: state.countryGdpData.concat(action.payload),\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case Types.FETCH_GDP_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        countryGdpData: [],\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case Types.FETCH_POP_GROWTH_DATA_START:\r\n      return {\r\n        ...state,\r\n        countryPopGrowthData: []\r\n      };\r\n    case Types.FETCH_POP_GROWTH_DATA_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        countryPopGrowthData: state.countryPopGrowthData.concat(action.payload),\r\n      };\r\n    case Types.FETCH_POP_GROWTH_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        countryPopGrowthData: [],\r\n      };\r\n    case Types.FETCH_PRICING_DATA_START:\r\n      return {\r\n        ...state,\r\n        countryPricingData: [],\r\n      };\r\n    case Types.FETCH_PRICING_DATA_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        countryPricingData: state.countryPricingData.concat(action.payload),\r\n      };\r\n    case Types.FETCH_PRICING_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        countryPricingData: [],\r\n      };\r\n    case Types.FETCH_INFLATION_DATA_START:\r\n      return {\r\n        ...state,\r\n        countryInflationData: [],\r\n      };\r\n    case Types.FETCH_INFLATION_DATA_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        countryInflationData: state.countryInflationData.concat(action.payload),\r\n      };\r\n    case Types.FETCH_INFLATION_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        countryInflationData: [],\r\n      };\r\n    case Types.FETCH_GDP_GROWTH_DATA_START:\r\n      return {\r\n        ...state,\r\n        countryGdpGrowthData: [],\r\n      };\r\n    case Types.FETCH_GDP_GROWTH_DATA_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        countryGdpGrowthData: state.countryGdpGrowthData.concat(action.payload),\r\n      };\r\n    case Types.FETCH_GDP_GROWTH_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        countryGdpGrowthData: [],\r\n      };\r\n    case Types.FETCH_EXPANSE_DATA_START:\r\n      return {\r\n        ...state,\r\n        countryExpanseData: [],\r\n      };\r\n    case Types.FETCH_EXPANSE_DATA_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        countryExpanseData: state.countryExpanseData.concat(action.payload),\r\n      };\r\n    case Types.FETCH_EXPANSE_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        countryExpanseData: [],\r\n      };\r\n    case Types.FETCH_PRICE_DEFLATOR_DATA_START:\r\n      return {\r\n        ...state,\r\n        countryPriceDeflatorData: [],\r\n      };\r\n    case Types.FETCH_PRICE_DEFLATOR_DATA_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        countryPriceDeflatorData: state.countryPriceDeflatorData.concat(action.payload),\r\n      };\r\n    case Types.FETCH_PRICE_DEFLATOR_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        countryPriceDeflatorData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/**\r\n * @fileoverview Store\r\n */\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport SpinnerReducer, { SpinningState } from \"./reducers\";\r\nimport VerifyAuthReducer, { VerifyAuthState } from \"./reducers/VerifyAuth\";\r\nimport FetchCountriesReducer, { FetchCountriesState } from \"./reducers/FetchCountries\";\r\nimport FetchDataReducer, { FetchDataState } from \"./reducers/FetchData\";\r\n\r\nexport interface RootState {\r\n  spinnerState: SpinningState,\r\n  verifyAuthState: VerifyAuthState,\r\n  fetchCountriesState: FetchCountriesState,\r\n  fetchDataState: FetchDataState,\r\n}\r\n\r\nexport const store = createStore(\r\n  combineReducers<RootState>({\r\n    spinnerState: SpinnerReducer,\r\n    verifyAuthState: VerifyAuthReducer,\r\n    fetchCountriesState: FetchCountriesReducer,\r\n    fetchDataState: FetchDataReducer,\r\n  }),\r\n  applyMiddleware(thunkMiddleware)\r\n);\r\n","/**\r\n * @fileoverview Actions index\r\n */\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { AnyAction } from \"redux\";\r\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport { Actions, Types } from \"./actionTypes\";\r\n\r\n/**\r\n * Page information from API\r\n */\r\ninterface Page {\r\n  page: number,\r\n  pages: number,\r\n  per_page: string,\r\n  total: number,\r\n  sourceid?: string,\r\n  lastupdated?: string,\r\n};\r\n\r\n/**\r\n * Region Information\r\n */\r\ninterface RegionInfo {\r\n  id: string,\r\n  iso2Code: string,\r\n  name?: string,\r\n  value?: string\r\n}\r\n\r\n/**\r\n * Country Information\r\n */\r\nexport interface CountryInfo {\r\n  id: string,\r\n  iso2Code: string,\r\n  name: string,\r\n  value?: string,\r\n  region: RegionInfo,\r\n  adminRegion: RegionInfo,\r\n  incomeLevel: RegionInfo,\r\n  lendingType: RegionInfo,\r\n  capitalCity: string,\r\n  longitude: string,\r\n  latitude: string,\r\n}\r\n\r\n/**\r\n * Country data\r\n */\r\nexport interface CountryData {\r\n  indicator: {\r\n    id: string,\r\n    value: string,\r\n  },\r\n  country: {\r\n    id: string,\r\n    value: string,\r\n  },\r\n  countryiso3code: string,\r\n  date: string,\r\n  value: number,\r\n  unit: string,\r\n  obs_status: string,\r\n  decimal: number,\r\n}\r\n\r\ninterface FetchActions<T> {\r\n  start: () => Actions,\r\n  succeeded: (result: T[]) => Actions,\r\n  failed: (errMsg: string) => Actions,\r\n}\r\n\r\nexport const fetchGdpGrowthActions: FetchActions<CountryData> = {\r\n  start: (): Actions => {\r\n    return {\r\n      type: Types.FETCH_GDP_GROWTH_DATA_START,\r\n      payload: null,\r\n    }\r\n  },\r\n  succeeded: (countryData: CountryData[]): Actions => {\r\n    return {\r\n      type: Types.FETCH_GDP_GROWTH_DATA_SUCCEEDED,\r\n      payload: countryData,\r\n    }\r\n  },\r\n  failed: (errMsg: string): Actions => {\r\n    return {\r\n      type: Types.FETCH_GDP_GROWTH_DATA_FAILED,\r\n      payload: errMsg,\r\n    };\r\n  },\r\n};\r\n\r\nconst buildAction = (\r\n  startActionType: string,\r\n  succeededActionType: string,\r\n  failedActionType: string): FetchActions<CountryData> => {\r\n  return {\r\n    start: (): Actions => {\r\n      return {\r\n        type: startActionType,\r\n        payload: null,\r\n      }\r\n    },\r\n    succeeded: (countryData: CountryData[]): Actions => {\r\n      return {\r\n        type: succeededActionType,\r\n        payload: countryData,\r\n      }\r\n    },\r\n    failed: (errMsg: string): Actions => {\r\n      return {\r\n        type: failedActionType,\r\n        payload: errMsg,\r\n      };\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchPricingActions = buildAction(\r\n  Types.FETCH_PRICING_DATA_START,\r\n  Types.FETCH_PRICING_DATA_SUCCEEDED,\r\n  Types.FETCH_PRICING_DATA_FAILED);\r\n\r\nexport const fetchInflationActions = buildAction(\r\n  Types.FETCH_INFLATION_DATA_START,\r\n  Types.FETCH_INFLATION_DATA_SUCCEEDED,\r\n  Types.FETCH_INFLATION_DATA_FAILED);\r\n\r\nexport const fetchGdpActions = buildAction(\r\n  Types.FETCH_GDP_DATA_START,\r\n  Types.FETCH_GDP_DATA_SUCCEEDED,\r\n  Types.FETCH_GDP_DATA_FAILED);\r\n\r\nexport const fetchPopGrowthActions = buildAction(\r\n  Types.FETCH_POP_GROWTH_DATA_START,\r\n  Types.FETCH_POP_GROWTH_DATA_SUCCEEDED,\r\n  Types.FETCH_POP_GROWTH_DATA_FAILED);\r\n\r\nexport const fetchExpanseActions = buildAction(\r\n  Types.FETCH_EXPANSE_DATA_START,\r\n  Types.FETCH_EXPANSE_DATA_SUCCEEDED,\r\n  Types.FETCH_EXPANSE_DATA_FAILED);\r\n\r\nexport const fetchPriceDeflatorActions = buildAction(\r\n  Types.FETCH_PRICE_DEFLATOR_DATA_START,\r\n  Types.FETCH_PRICE_DEFLATOR_DATA_SUCCEEDED,\r\n  Types.FETCH_PRICE_DEFLATOR_DATA_FAILED);\r\n\r\nconst storeInSesssion = <T extends any>(key: string, data: T[]) => {\r\n  sessionStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\n// type StoreFunction = <T> (key: string, data: T[]) => void;\r\n// const storeInSesssion: StoreFunction = (key: string, data) => {\r\n//   sessionStorage.setItem(key, JSON.stringify(data));\r\n// };\r\n\r\n// function storeInSesssion<T>(key: string, data: T[]) {\r\n//   sessionStorage.setItem(key, JSON.stringify(data));\r\n// }\r\n\r\nconst getSession = (key: string) => {\r\n  const data = sessionStorage.getItem(key);\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst startSpining = (): Actions => {\r\n  console.log('starting_spinning');\r\n  return {\r\n    type: Types.START_SPINNER,\r\n    payload: 'start_spinning'\r\n  };\r\n};\r\n\r\nconst stopSpinning = (): Actions => {\r\n  console.log('stoping_spinning');\r\n  return {\r\n    type: Types.STOP_SPINNNER,\r\n    payload: 'stop_spinning'\r\n  };\r\n};\r\n\r\nconst api = (): Promise<void> => {\r\n  return new Promise<void>((resolve, reject) => {\r\n    setTimeout(() => resolve(), 3000);\r\n  });\r\n};\r\n\r\nexport const keepSpinning = (): ThunkAction<Promise<void>, {}, null, AnyAction> => {\r\n  return async (dispatch: ThunkDispatch<{}, null, AnyAction>) => {\r\n    dispatch(startSpining());\r\n    await api();\r\n    dispatch(stopSpinning());\r\n  };\r\n};\r\n\r\nconst startSignIn = (): Actions => {\r\n  return {\r\n    type: Types.START_SIGNIN,\r\n    payload: null,\r\n  };\r\n};\r\n\r\nconst signInSucceed = (token: string): Actions => {\r\n  return {\r\n    type: Types.VERIFY_SUCCEEDED,\r\n    payload: token\r\n  };\r\n};\r\n\r\nconst signInFailed = (errMsg: string): Actions => {\r\n  return {\r\n    type: Types.VERIFY_FAILED,\r\n    payload: errMsg\r\n  };\r\n};\r\n\r\nconst startFetch = (): Actions => {\r\n  return {\r\n    type: Types.START_FETCHING,\r\n    payload: null,\r\n  };\r\n};\r\n\r\nconst fetchCountriesFailed = (errMsg: string): Actions => {\r\n  return {\r\n    type: Types.FETCH_FAILED,\r\n    payload: errMsg,\r\n  };\r\n};\r\n\r\nconst fetchCountriesSucceeded = (countries: CountryInfo[]): Actions => {\r\n  return {\r\n    type: Types.FETCH_SUCCEEDED,\r\n    payload: countries,\r\n  }\r\n};\r\n\r\nexport const verifyUser = (email: string, password: string): ThunkAction<Promise<void>, {}, null, AnyAction> => {\r\n  return async (dispatch: ThunkDispatch<{}, null, AnyAction>) => {\r\n    const apiUrl = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=';\r\n    const apiKey = 'AIzaSyDyfHsCfAGW6pMe0KxL9kYWkMA23rJEV14';\r\n    dispatch(startSignIn());\r\n    try {\r\n      const res: AxiosResponse<any> = await axios.post(`${apiUrl}${apiKey}`, {\r\n        email, password, returnSecureToken: true\r\n      });\r\n      dispatch(signInSucceed(res.data['idToken']));\r\n    } catch (error) {\r\n      dispatch(signInFailed('Incorrect user and password'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const signInOut = (): Actions => {\r\n  return {\r\n    type: Types.INVALDIATE_AUTH,\r\n    payload: null,\r\n  }\r\n};\r\n\r\nconst apiGetCountries = (page: number = 1) => {\r\n  return axios.get('https://api.worldbank.org/v2/country', {\r\n    params: {\r\n      format: 'json',\r\n      page: page\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchCountries = (): ThunkAction<Promise<void>, {}, null, AnyAction> => {\r\n  return async (dispatch: ThunkDispatch<{}, null, AnyAction>) => {\r\n    dispatch(startFetch());\r\n    let data = getSession('FetchCountries');\r\n    if (data) {\r\n      dispatch(fetchCountriesSucceeded(data));\r\n    } else {\r\n      try {\r\n        let res: AxiosResponse<any> = await apiGetCountries();\r\n        let pageInfo: Page = res.data[0];\r\n        const countries: CountryInfo[] = res.data[1];\r\n        while (pageInfo.page < pageInfo.pages) {\r\n          res = await apiGetCountries(pageInfo.page + 1);\r\n          pageInfo = res.data[0];\r\n          let t: CountryInfo[] = res.data[1];\r\n          countries.push(...t);\r\n        }\r\n        dispatch(fetchCountriesSucceeded(countries));\r\n        storeInSesssion('FetchCountries', countries);\r\n      } catch (error) {\r\n        dispatch(fetchCountriesFailed('Fetch countries failed'));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst fetchDataStart = (): Actions => {\r\n  return {\r\n    type: Types.FETCH_DATA_START,\r\n    payload: null,\r\n  }\r\n};\r\n\r\nconst fetchDataSucceeded = (countryData: CountryData[]): Actions => {\r\n  return {\r\n    type: Types.FETCH_DATA_SUCCEEDED,\r\n    payload: countryData,\r\n  }\r\n};\r\n\r\nconst fetchDataFailed = (errMsg: string): Actions => {\r\n  return {\r\n    type: Types.FETCH_DATA_FAILED,\r\n    payload: errMsg,\r\n  };\r\n};\r\n\r\nconst apiFetchData = (country: string, indicator: string, page: number = 1) => {\r\n  const apiUrl = `https://api.worldbank.org/v2/country/${country}/indicator/${indicator}`;\r\n  return axios.get(apiUrl, {\r\n    params: {\r\n      format: 'json',\r\n      page: page\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchData = (country: string, indicator: string): ThunkAction<Promise<void>, {}, null, AnyAction> => {\r\n  return async (dispatch: ThunkDispatch<{}, null, AnyAction>) => {\r\n    dispatch(fetchDataStart());\r\n    let data = getSession(`${country}${indicator}`);\r\n    if (data) {\r\n      dispatch(fetchDataSucceeded(data));\r\n    } else {\r\n      try {\r\n        let res: AxiosResponse<any> = await apiFetchData(country, indicator);\r\n        let pageInfo: Page = res.data[0];\r\n        const countryData: CountryData[] = res.data[1];\r\n        while (pageInfo.page < pageInfo.pages) {\r\n          res = await apiFetchData(country, indicator, pageInfo.page + 1);\r\n          pageInfo = res.data[0];\r\n          let t: CountryData[] = res.data[1];\r\n          countryData.push(...t);\r\n        }\r\n        dispatch(fetchDataSucceeded(countryData));\r\n        storeInSesssion(`${country}${indicator}`, countryData);\r\n      } catch (error) {\r\n        dispatch(fetchDataFailed(\"Failed in fetching data\"));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchData2 = <T extends any>(country: string, indicator: string, fetchActions: FetchActions<T>):\r\n  ThunkAction<Promise<void>, {}, null, AnyAction> => {\r\n  return async (dispatch: ThunkDispatch<{}, null, AnyAction>) => {\r\n    dispatch(fetchActions.start());\r\n    let data = getSession(`${country}${indicator}`);\r\n    if (data) {\r\n      dispatch(fetchActions.succeeded(data));\r\n    } else {\r\n      try {\r\n        let res: AxiosResponse<any> = await apiFetchData(country, indicator);\r\n        let pageInfo: Page = res.data[0];\r\n        const countryData: T[] = res.data[1];\r\n        while (pageInfo.page < pageInfo.pages) {\r\n          res = await apiFetchData(country, indicator, pageInfo.page + 1);\r\n          pageInfo = res.data[0];\r\n          let t: T[] = res.data[1];\r\n          countryData.push(...t);\r\n        }\r\n        dispatch(fetchActions.succeeded(countryData));\r\n        storeInSesssion(`${country}${indicator}`, countryData);\r\n      } catch (error) {\r\n        dispatch(fetchActions.failed(\"Failed in fetching data\"));\r\n      }\r\n    }\r\n  };\r\n};\r\n","/**\r\n * @fileoverview HTML Span button component\r\n */\r\nimport React, { FC } from \"react\";\r\nimport Styles from \"./BarsButton.module.css\";\r\n\r\ntype Props = { clicked: () => void }\r\nconst BarsButton: FC<Props> = (props) => {\r\n  return (\r\n    <div className={Styles.bars} onClick={props.clicked}>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarsButton;\r\n","/**\r\n * @fileoverview Spinner\r\n */\r\nimport React, { FC } from \"react\";\r\n\r\nimport SpinnerStyles from './Spinner.module.css';\r\n\r\nconst Spinner: FC = () => (\r\n  <div className={SpinnerStyles.loader}></div>\r\n);\r\n\r\nexport default Spinner;\r\n","/**\r\n * @fileoverview Generate random Id\r\n */\r\nconst int: number = 2836674389;\r\nexport function randomId(): string {\r\n  return ((Math.random() + Math.random()) * int).toString(36).replace(/\\./, '');\r\n}","/**\r\n * @fileoverview Side bar component\r\n */\r\nimport React, { FC } from \"react\";\r\nimport Styles from './SideBar.module.css';\r\nimport { randomId } from \"../random\";\r\n\r\ntype ListItemType = { name: string, id: string }\r\ntype Props = { listItems: ListItemType[], clicked: (id: string) => void }\r\nconst SideBar: FC<Props> = (props) => {\r\n\r\n  // const someContent = [];\r\n  // for (let i = 0; i < 100; i++) {\r\n  //   someContent.push((Math.random() * 2019).toString(36).replace(/\\./, ''));\r\n  // }\r\n\r\n  return (\r\n    <div className={Styles.sideBar}>\r\n      <ul className={Styles.items}>\r\n        {props.listItems.map(d => <li key={randomId()}\r\n          className={Styles.item}\r\n          onClick={() => props.clicked(d.id)}>{d.name}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","/**\r\n * @fileoverview Line component\r\n */\r\nimport React, { FC } from \"react\";\r\nimport { select, Selection } from \"d3-selection\";\r\nimport { ScaleLinear, scaleLinear, timeYear } from \"d3\";\r\nimport { ScaleTime, scaleTime } from \"d3-scale\";\r\nimport { extent } from \"d3-array\"\r\nimport { line, Line } from \"d3-shape\";\r\nimport { format } from \"d3-format\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { randomId } from \"../random\";\r\nimport Styles from './TimeseriesLine.module.css';\r\n\r\ntype Props = {\r\n  title: string,\r\n  width: number,\r\n  height: number,\r\n  margin: {\r\n    top: number,\r\n    right: number,\r\n    bottom: number,\r\n    left: number,\r\n  },\r\n  data: { key: Date, value: number }[],\r\n  showXaxis: boolean,\r\n  showYaxis: boolean,\r\n  timeYearInterval?: number,\r\n}\r\nconst TimeseriesLine: FC<Props> = (props) => {\r\n\r\n  const height = props.height - props.margin.top - props.margin.bottom;\r\n  const width = props.width - props.margin.left - props.margin.right;\r\n  const x: ScaleTime<number, number> = scaleTime<number>();\r\n  const y: ScaleLinear<number, number> = scaleLinear<number>();\r\n  const AMOUNT_TO_TRIGGER_FORMAT = 1000;\r\n  const [minDate, maxDate] = extent(props.data, d => d.key);\r\n  const [minY, maxY] = extent(props.data, d => d.value);\r\n\r\n  const xTimeScale = () => {\r\n    if (minDate && maxDate) {\r\n      return x.domain([minDate, maxDate]).range([0, width]).nice();\r\n    }\r\n  }\r\n\r\n  const yNumberScale = () => {\r\n    if (minY && maxY) {\r\n      return y.domain([minY < 0 ? minY : 0, maxY]).range([height, 0]).nice();\r\n    }\r\n  }\r\n\r\n  const customYaxis = (\r\n    svg: Selection<SVGSVGElement, {}, null, undefined>) => {\r\n    const yValueFormat: string =\r\n      ((maxY ? maxY : 0) < AMOUNT_TO_TRIGGER_FORMAT) ? ',.2f' : '~s';\r\n    const yAxis =\r\n      axisLeft(y).ticks(height / 50).tickSize(-width).tickFormat(format(yValueFormat));\r\n    svg.call(yAxis);\r\n  }\r\n\r\n  const customXaxis = (\r\n    svg: Selection<SVGSVGElement, {}, null, undefined>) => {\r\n    //tickFormat(timeFormat(\"%Y\"));\r\n    let xAxis = axisBottom<Date>(x).ticks(\r\n      timeYear.every(props.timeYearInterval ? props.timeYearInterval : 1));\r\n    svg.call(xAxis)\r\n      .selectAll('text')\r\n      .style('text-anchor', 'end')\r\n      .attr('dx', \"-0.8em\")\r\n      .attr('dy', '0.15em')\r\n      .attr('transform', 'rotate(-65)');\r\n  }\r\n\r\n  const createTimeseriesPath = ():\r\n    Line<{ key: Date, value: number }> | undefined => {\r\n    const xd = xTimeScale();\r\n    const yd = yNumberScale();\r\n    if (xd && yd) {\r\n      return line<{ key: Date, value: number }>().x(d => xd(d.key)).y(d => yd(d.value));\r\n    }\r\n  }\r\n\r\n  const createDataPoints = () => {\r\n    const xd = xTimeScale();\r\n    const yd = yNumberScale();\r\n    if (xd && yd) {\r\n      return props.data.map(d =>\r\n        <circle\r\n          key={randomId()}\r\n          className={Styles.dots}\r\n          cx={xd(d.key)}\r\n          cy={yd(d.value)}\r\n          r={2.5} />);\r\n    }\r\n  }\r\n\r\n  const pathLine = createTimeseriesPath();\r\n  const timeseriesLine = pathLine ? pathLine(props.data) : null;\r\n  const dataPoints = createDataPoints();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {timeseriesLine ?\r\n        <div className={Styles.lineChart}>\r\n          <div className={Styles.title}>{props.title}</div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            width={'100%'}\r\n            height={props.height}>\r\n            <g transform={`translate(${props.margin.left}, ${props.margin.top})`}>\r\n              {props.showXaxis ?\r\n                <g className={Styles.axisX} transform={`translate(0, ${height + 1})`}\r\n                  ref={(el: SVGSVGElement) =>\r\n                    select(el).call(customXaxis)}></g> : null}\r\n              {props.showYaxis ?\r\n                <g className={Styles.axisY} ref={(el: SVGSVGElement) =>\r\n                  select(el).call(customYaxis)}></g> : null}\r\n              <path d={timeseriesLine} className={Styles.line}></path>\r\n              {dataPoints ? dataPoints : null}\r\n            </g>\r\n          </svg>\r\n        </div> :\r\n        <div>No Data</div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TimeseriesLine;\r\n","/**\r\n * @fileoverview Backup (Fake) time series line component\r\n */\r\nimport React from \"react\";\r\nimport TimeseriesLine from \"./TimeseriesLine\";\r\n\r\nconst BackupTimeseriesLine = () => {\r\n\r\n  const init = [];\r\n  for (let i = 1980; i < 2020; i++) {\r\n    init.push({\r\n      key: new Date(i, 11, 31),\r\n      value: (Math.random() * 10) - 5\r\n    });\r\n  }\r\n\r\n  return (\r\n    <TimeseriesLine\r\n      width={360}\r\n      height={300}\r\n      margin={{ top: 20, right: 50, bottom: 50, left: 50 }}\r\n      title={'Time Series of Growth'}\r\n      data={init}\r\n      showXaxis={true}\r\n      showYaxis={true}\r\n      timeYearInterval={5} />\r\n  );\r\n};\r\n\r\nexport default BackupTimeseriesLine;\r\n","/**\r\n * @fileoverview Pie chart component\r\n */\r\nimport React, { FC } from \"react\";\r\nimport { pie, arc, PieArcDatum } from \"d3\";\r\nimport { format } from \"d3-format\";\r\nimport { randomId } from \"../random\";\r\nimport Styles from './Pie.module.css';\r\n\r\ntype Data = {\r\n  key: Date, value: number\r\n}\r\ntype Props = {\r\n  title: string,\r\n  width: number,\r\n  height: number,\r\n  data: Data[],\r\n}\r\nconst Pie: FC<Props> = (props) => {\r\n\r\n  const height = props.height;\r\n  const width = props.width;\r\n  const radius = Math.min(width, height) / 3;\r\n  const pieGen = pie<Data>().sort(null).value(d => d.value);\r\n  const arcGen = arc<PieArcDatum<Data>>().innerRadius(0).outerRadius(radius);\r\n  const outerArcGen =\r\n    arc<PieArcDatum<Data>>().innerRadius(radius * 0.8).outerRadius(radius * 0.9);\r\n  const [blue, red] = ['#3f51b5', '#f48fb1'];\r\n\r\n  const midAngle = (d: PieArcDatum<Data>) => {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n\r\n  const createArcs = () => {\r\n    if (props.data.length > 0) {\r\n      const [target] = pieGen(props.data);\r\n      const [p, other] = pieGen(props.data).map(d => arcGen(d));\r\n      const posZero = radius * 0.95 * (midAngle(target) < Math.PI ? 1 : -1);\r\n      const labelAnchor = midAngle(target) < Math.PI ? 'start' : 'end';\r\n      const els = [];\r\n      if (p && other) {\r\n        let pos = outerArcGen.centroid(target);\r\n        pos[0] = posZero;\r\n        let pts = [\r\n          arcGen.centroid(target),\r\n          outerArcGen.centroid(target),\r\n          pos,\r\n        ];\r\n        els.push(<path key={randomId()} d={p} fill={red}></path>);\r\n        els.push(<path key={randomId()} d={other} fill={blue}></path>);\r\n        els.push(\r\n          <g key={randomId()} className={Styles.polylines}>\r\n            <polyline points={pts.map(points => points.join(',')).join(',')}></polyline>\r\n          </g>);\r\n        els.push(\r\n          <g key={randomId()} className={Styles.labelText}>\r\n            <text\r\n              dy={'0.36em'}\r\n              dx={'0.36em'}\r\n              transform={`translate(${pos})`}\r\n              style={{ textAnchor: labelAnchor }}>{`${format(\".2f\")(target.data.value)}%`}</text>\r\n          </g>);\r\n        return els;\r\n      }\r\n    }\r\n  }\r\n\r\n  const arcs = createArcs();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {arcs ?\r\n        <div className={Styles.pieChart}>\r\n          <div className={Styles.title}><span></span>{props.title}</div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            width={props.width}\r\n            height={props.height}>\r\n            <g transform={`translate(${width / 2}, ${height / 2})`}>\r\n              {arcs}\r\n            </g>\r\n          </svg>\r\n        </div> : <div>No Data</div>}\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default Pie;\r\n","/**\r\n * @fileoverview Backup (Fake) pie chart component \r\n */\r\nimport React, { FC } from \"react\";\r\nimport Pie from \"./Pie\";\r\n\r\nconst BackupPie: FC = () => {\r\n\r\n  const todayYear = (new Date()).getFullYear();\r\n\r\n  return (\r\n    <Pie\r\n      title={`${todayYear} growth (annual %) `}\r\n      width={360}\r\n      height={300} data={[{ key: new Date(2019, 11, 31), value: 32.85699280397323 },\r\n      { key: new Date(2018, 11, 31), value: 67.14300719602677 }]} />\r\n  );\r\n};\r\n\r\nexport default BackupPie;\r\n","/**\r\n * @fileoverview Bars chart component\r\n */\r\nimport React, { FC } from \"react\";\r\nimport { scaleLinear, scaleBand, scaleTime } from \"d3-scale\";\r\nimport { extent } from \"d3-array\"\r\nimport { select, Selection } from \"d3-selection\";\r\nimport { axisLeft, axisBottom } from \"d3-axis\";\r\nimport { timeYear } from \"d3-time\";\r\nimport { randomId } from \"../random\";\r\nimport Styles from \"./Bars.module.css\";\r\n\r\ntype Props = {\r\n  title: string,\r\n  width: number,\r\n  height: number,\r\n  margin: {\r\n    top: number,\r\n    right: number,\r\n    bottom: number,\r\n    left: number,\r\n  },\r\n  data: { key: Date, value: number }[],\r\n  showXaxis: boolean,\r\n  showYaxis: boolean,\r\n  timeYearInterval?: number,\r\n}\r\nconst Bars: FC<Props> = (props) => {\r\n\r\n  const height = props.height - props.margin.top - props.margin.bottom;\r\n  const width = props.width - props.margin.left - props.margin.right;\r\n  const x = scaleBand<string>();\r\n  const y = scaleLinear<number>();\r\n  const [minDate, maxDate] = extent(props.data, d => d.key);\r\n  const [minValue, maxValue] = extent(props.data, d => d.value);\r\n\r\n  const xBandScale = () => {\r\n    const holder: number[] = [];\r\n    const t = holder.concat(props.data.map(d => d.key.getFullYear()));\r\n    t.sort((a, b) => a - b);\r\n    return x.domain(t.map(d => String(d)))\r\n      .range([0, width]).paddingInner(0.01);\r\n  }\r\n\r\n  const yNumberScale = () => {\r\n    if (minValue && maxValue) {\r\n      return y.domain([Math.min(0, minValue), maxValue])\r\n        .range([height, 0]).nice();\r\n    }\r\n  }\r\n\r\n  const customYaxis = (\r\n    svg: Selection<SVGSVGElement, {}, null, undefined>) => {\r\n    const yAxis = axisLeft(y).ticks(height / 50, \".2f\");\r\n    svg.call(yAxis);\r\n  }\r\n\r\n  const customXaxis = (\r\n    svg: Selection<SVGSVGElement, {}, null, undefined>) => {\r\n    if (minDate && maxDate) {\r\n      const xtime = scaleTime().domain([minDate, maxDate]).range([0, width]).nice();\r\n      const xAxis = axisBottom<Date>(xtime).ticks(\r\n        timeYear.every(props.timeYearInterval ? props.timeYearInterval : 1));\r\n      svg.call(xAxis)\r\n        .selectAll('text')\r\n        .style('text-anchor', 'end')\r\n        .attr('dx', \"-0.8em\")\r\n        .attr('dy', '0.15em')\r\n        .attr('transform', 'rotate(-65)');\r\n    }\r\n  }\r\n\r\n  const createRects = () => {\r\n    const xd = xBandScale();\r\n    const yd = yNumberScale();\r\n    if (xd && yd) {\r\n      return props.data.map(d =>\r\n        <rect\r\n          key={randomId()}\r\n          className={d.value < 0 ? Styles.barNegative : Styles.barPositive}\r\n          x={xd(String(d.key.getFullYear()))}\r\n          y={yd(d.value <= 0 ? 0 : d.value)}\r\n          width={xd.bandwidth()}\r\n          height={Math.abs(yd(d.value) - yd(0))}></rect>);\r\n    }\r\n  }\r\n\r\n  const bars = createRects();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {bars ?\r\n        <div className={Styles.barChart}>\r\n          <div className={Styles.title}>{props.title}</div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            width={props.width}\r\n            height={props.height}>\r\n            <g transform={`translate(${props.margin.left}, ${props.margin.top})`}>\r\n              {props.showXaxis ?\r\n                <g className={Styles.axisX} transform={`translate(0, ${height + 1})`}\r\n                  ref={(el: SVGSVGElement) =>\r\n                    select(el).call(customXaxis)}></g> : null}\r\n              {props.showYaxis ?\r\n                <g className={Styles.axisY} ref={(el: SVGSVGElement) =>\r\n                  select(el).call(customYaxis)}></g> : null}\r\n              {bars}\r\n            </g>\r\n          </svg>\r\n        </div> : <div>No Data</div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n","/**\r\n * @fileoverview Backup (Fake) bars chart component \r\n */\r\nimport React, { FC } from \"react\";\r\nimport Bars from \"./Bars\";\r\n\r\nconst BackupBars: FC = () => {\r\n\r\n  const init = [];\r\n  for (let i = 1980; i < 2020; i++) {\r\n    init.push({\r\n      key: new Date(i, 11, 31),\r\n      value: (Math.random() * 10) - 5\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Bars width={360}\r\n      height={300}\r\n      margin={{ top: 20, right: 50, bottom: 50, left: 50 }}\r\n      title={'Bars chart of Growth'}\r\n      data={init}\r\n      showXaxis={true}\r\n      showYaxis={true}\r\n      timeYearInterval={5} />\r\n  );\r\n};\r\n\r\nexport default BackupBars;\r\n","/**\r\n * @fileoverview Bullet point component\r\n */\r\nimport React, { FC } from \"react\";\r\nimport Styles from './BulletPoint.module.css';\r\n\r\ntype Props = { title: string, color: string }\r\nconst BulletPoint: FC<Props> = (props) => {\r\n  return (\r\n    <div>\r\n      <span className={Styles.bulletPoint}\r\n        style={{ background: props.color }}></span>\r\n      <span className={Styles.title}>{props.title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulletPoint;\r\n","/**\r\n * @fileoverview Multi line component\r\n */\r\nimport React, { FC } from \"react\";\r\nimport { select, Selection } from \"d3-selection\";\r\nimport {\r\n  ScaleLinear,\r\n  scaleLinear,\r\n  ScaleTime,\r\n  scaleTime,\r\n  scaleOrdinal\r\n} from \"d3-scale\";\r\nimport { extent } from \"d3-array\"\r\nimport { line, Line } from \"d3-shape\";\r\nimport { format } from \"d3-format\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { timeYear } from \"d3-time\";\r\nimport { nest, schemeCategory10 } from \"d3\";\r\nimport { randomId } from \"../random\";\r\nimport BulletPoint from \"../UI/BulletPoint\";\r\nimport Styles from './MultiLines.module.css';\r\n\r\ntype Data = { indicator: string, key: Date, value: number }\r\ntype Props = {\r\n  titles: { indicator: string, title: string }[],\r\n  width: number,\r\n  height: number,\r\n  margin: {\r\n    top: number,\r\n    right: number,\r\n    bottom: number,\r\n    left: number,\r\n  },\r\n  data: Data[],\r\n  showXaxis: boolean,\r\n  showYaxis: boolean,\r\n  timeYearInterval?: number,\r\n}\r\nconst MultiLines: FC<Props> = (props) => {\r\n\r\n  const height = props.height - props.margin.top - props.margin.bottom;\r\n  const width = props.width - props.margin.left - props.margin.right;\r\n  const x: ScaleTime<number, number> = scaleTime<number>();\r\n  const y: ScaleLinear<number, number> = scaleLinear<number>();\r\n  const AMOUNT_TO_TRIGGER_FORMAT = 1000;\r\n  const [minDate, maxDate] = extent(props.data, d => d.key);\r\n  const [minY, maxY] = extent(props.data, d => d.value);\r\n  const dataNest = nest<Data>().key(d => d.indicator).entries(props.data);\r\n  const color = scaleOrdinal(schemeCategory10);\r\n\r\n  const xTimeScale = () => {\r\n    if (minDate && maxDate) {\r\n      return x.domain([minDate, maxDate]).range([0, width]).nice();\r\n    }\r\n  }\r\n\r\n  const yNumberScale = () => {\r\n    if (minY && maxY) {\r\n      return y.domain([minY < 0 ? minY : 0, maxY]).range([height, 0]).nice();\r\n    }\r\n  }\r\n\r\n  const customYaxis = (\r\n    svg: Selection<SVGSVGElement, {}, null, undefined>) => {\r\n    const yValueFormat: string =\r\n      ((maxY ? maxY : 0) < AMOUNT_TO_TRIGGER_FORMAT) ? ',.2f' : '~s';\r\n    const yAxis =\r\n      axisLeft(y).ticks(height / 50).tickSize(-width).tickFormat(format(yValueFormat));\r\n    svg.call(yAxis);\r\n  }\r\n\r\n  const customXaxis = (\r\n    svg: Selection<SVGSVGElement, {}, null, undefined>) => {\r\n    //tickFormat(timeFormat(\"%Y\"));\r\n    let xAxis = axisBottom<Date>(x).ticks(\r\n      timeYear.every(props.timeYearInterval ? props.timeYearInterval : 1));\r\n    svg.call(xAxis)\r\n      .selectAll('text')\r\n      .style('text-anchor', 'end')\r\n      .attr('dx', \"-0.8em\")\r\n      .attr('dy', '0.15em')\r\n      .attr('transform', 'rotate(-65)');\r\n  }\r\n\r\n  const createTimeseriesPath = ():\r\n    Line<{ key: Date, value: number }> | undefined => {\r\n    const xd = xTimeScale();\r\n    const yd = yNumberScale();\r\n    if (xd && yd) {\r\n      return line<{ key: Date, value: number }>().x(d => xd(d.key)).y(d => yd(d.value));\r\n    }\r\n  }\r\n\r\n  const createDataPoints = () => {\r\n    const xd = xTimeScale();\r\n    const yd = yNumberScale();\r\n    if (xd && yd) {\r\n      return props.data.map(d =>\r\n        <circle\r\n          key={randomId()}\r\n          className={Styles.dots}\r\n          cx={xd(d.key)}\r\n          cy={yd(d.value)}\r\n          r={2} />);\r\n    }\r\n  }\r\n\r\n  const pathLine = createTimeseriesPath();\r\n  const dataPoints = createDataPoints();\r\n  const lines: { key: string, line: string }[] = [];\r\n  if (pathLine) {\r\n    dataNest.forEach(line => {\r\n      let l = pathLine(line.values);\r\n      if (l) {\r\n        lines.push({ key: line.key, line: l });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {lines.length > 0 ?\r\n        <div className={Styles.lineChart}>\r\n          <div className={Styles.title}>\r\n            {props.titles.map(d =>\r\n              (<BulletPoint key={randomId()} title={d.title} color={color(d.indicator)} />))}\r\n          </div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            width={'100%'}\r\n            height={props.height}>\r\n            <g transform={`translate(${props.margin.left}, ${props.margin.top})`}>\r\n              {props.showXaxis ?\r\n                <g className={Styles.axisX} transform={`translate(0, ${height + 1})`}\r\n                  ref={(el: SVGSVGElement) =>\r\n                    select(el).call(customXaxis)}></g> : null}\r\n              {props.showYaxis ?\r\n                <g className={Styles.axisY} ref={(el: SVGSVGElement) =>\r\n                  select(el).call(customYaxis)}></g> : null}\r\n              {lines.map(l => <path key={randomId()} d={l.line}\r\n                className={Styles.line} stroke={color(l.key)}></path>)}\r\n              {dataPoints ? dataPoints : null}\r\n            </g>\r\n          </svg>\r\n        </div> : <div>No Data</div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MultiLines;\r\n","/**\r\n * @fileoverview Backup (fake) multi line\r\n */\r\nimport React from \"react\";\r\nimport MultiLines from \"./MultiLines\";\r\n\r\nconst BackupMultiLines = () => {\r\n\r\n  const init = [];\r\n  for (let i = 1980; i < 2020; i++) {\r\n    init.push({\r\n      indicator: 'Today',\r\n      key: new Date(i, 11, 31),\r\n      value: (Math.random() * 10) - 5,\r\n    });\r\n  }\r\n  for (let i = 1980; i < 2020; i++) {\r\n    init.push({\r\n      indicator: 'After',\r\n      key: new Date(i, 11, 31),\r\n      value: (Math.random() * 10) - 5,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <MultiLines\r\n      width={360}\r\n      height={300}\r\n      margin={{ top: 20, right: 50, bottom: 50, left: 50 }}\r\n      titles={[{ indicator: 'Today', title: 'Today Growth' },\r\n      { indicator: 'After', title: 'After Growth' }]}\r\n      data={init}\r\n      showXaxis={true}\r\n      showYaxis={true}\r\n      timeYearInterval={5} />\r\n  );\r\n};\r\n\r\nexport default BackupMultiLines;\r\n","/**\r\n * @fileoverview Layout component\r\n */\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CountryInfo,\r\n  fetchCountries,\r\n  CountryData,\r\n  fetchData2,\r\n  fetchGdpGrowthActions,\r\n  fetchPopGrowthActions,\r\n  fetchGdpActions,\r\n  fetchPricingActions,\r\n  fetchInflationActions,\r\n  fetchExpanseActions,\r\n  fetchPriceDeflatorActions\r\n} from \"../store/actions\";\r\nimport { RootState } from \"../store\";\r\nimport BarsButton from \"./UI/BarsButton\";\r\nimport Spinner from \"./UI/Spinner\";\r\nimport SideBar from \"./UI/SideBar\";\r\nimport Styles from \"./Layout.module.css\";\r\nimport BackupTimeseriesLine from \"./Charts/BackupTimeseriesLine\";\r\nimport BackupPie from \"./Charts/BackupPie\";\r\nimport BackupBars from \"./Charts/BackupBars\";\r\nimport BackupMultiLines from \"./Charts/BackupMultiLines\";\r\nimport TimeseriesLine from \"./Charts/TimeseriesLine\";\r\nimport Pie from \"./Charts/Pie\";\r\nimport Bars from \"./Charts/Bars\";\r\nimport MultiLines from \"./Charts/MultiLines\";\r\n\r\ntype Props = {\r\n  loadingCountries: boolean,\r\n  countries: CountryInfo[],\r\n  getCountries: () => void,\r\n  countryGdpData: CountryData[],\r\n  countryPopGrowthData: CountryData[],\r\n  countryGdpGrowthData: CountryData[],\r\n  countryPricingData: CountryData[],\r\n  countryExpanseData: CountryData[],\r\n  countryInflationData: CountryData[],\r\n  countryPriceDeflatorData: CountryData[],\r\n  getCountryGdpData: (country: string, indicator: string) => void,\r\n  getCountryGdpGrowthData: (country: string, indicator: string) => void,\r\n  getCountryPopGrowthData: (country: string, indicator: string) => void,\r\n  getCountryPricingData: (country: string, indicator: string) => void,\r\n  getCountryInflationData: (country: string, indicator: string) => void,\r\n  getCountryExpanseData: (country: string, indicator: string) => void,\r\n  getCountryPriceDeflatorData: (country: string, indicator: string) => void,\r\n};\r\nconst Layout: FC<Props> = (props) => {\r\n\r\n  const [sideBarOpen, setSideBarOpen] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (props.countries && props.countries.length === 0) {\r\n      props.getCountries();\r\n    }\r\n  }, [props]);\r\n\r\n  const barsOnClickHandler = () => {\r\n    setSideBarOpen(true);\r\n  }\r\n\r\n  const listItemOnClickHandler = (id: string) => {\r\n    setSideBarOpen(false);\r\n    // NY.GDP.MKTP.CD    - GDP (current US$)\r\n    // NY.GDP.MKTP.KD.ZG - GDP growth (annual %)\r\n    // FM.LBL.BMNY.GD.ZS - Broad money (% of GDP)\r\n    // FP.CPI.TOTL       - Consumer price index (2010 = 100)\r\n    // FP.CPI.TOTL.ZG    - Inflation, consumer prices (annual %)\r\n    // NY.GDP.DEFL.KD.ZG - Inflation, GDP deflator (annual %)\r\n    // SP.POP.GROW       - Population growth (annual %)\r\n    // GC.XPN.TOTL.GD.ZS - Expense (% of GDP)\r\n    props.getCountryGdpData(id, \"NY.GDP.MKTP.CD\");\r\n    props.getCountryGdpGrowthData(id, \"NY.GDP.MKTP.KD.ZG\");\r\n    props.getCountryPopGrowthData(id, \"SP.POP.GROW\");\r\n    props.getCountryExpanseData(id, \"GC.XPN.TOTL.GD.ZS\");\r\n    props.getCountryPricingData(id, \"FP.CPI.TOTL\");\r\n    props.getCountryInflationData(id, \"FP.CPI.TOTL.ZG\");\r\n    props.getCountryPriceDeflatorData(id, \"NY.GDP.DEFL.KD.ZG\");\r\n  }\r\n\r\n  const clickedHandler = () => {\r\n    setSideBarOpen(false);\r\n  }\r\n\r\n  const createPieChart = (chartData: CountryData[]) => {\r\n    if (chartData[0] && chartData.length > 0) {\r\n      const year = chartData.find(d => d.value !== null);\r\n      if (year) {\r\n        return (\r\n          <Pie\r\n            title={`${year.date} ${year.country.value} ${year.indicator.value}`}\r\n            width={360}\r\n            height={300} data={[{ key: new Date(+year.date, 11, 31), value: year.value },\r\n            { key: new Date(+year.date, 11, 31), value: 100 - year.value }]} />\r\n        );\r\n      }\r\n    }\r\n    return (<BackupPie />);\r\n  }\r\n\r\n  const createLineChart = (chartData: CountryData[]) => {\r\n    let [info] = chartData;\r\n    if (info && chartData.length > 0) {\r\n      return (\r\n        <TimeseriesLine\r\n          width={360}\r\n          height={300}\r\n          margin={{ top: 20, right: 50, bottom: 50, left: 50 }}\r\n          title={`${info.country.value} ${info.indicator.value}`}\r\n          data={chartData.map(d => ({ key: new Date(+d.date, 11, 31), value: d.value }))}\r\n          showXaxis={true}\r\n          showYaxis={true}\r\n          timeYearInterval={Math.min(10, chartData.length)} />\r\n      );\r\n    }\r\n    return (<BackupTimeseriesLine />);\r\n  };\r\n\r\n  const createbarChart = (chartData: CountryData[]) => {\r\n    let [info] = chartData;\r\n    if (info && chartData.length > 0) {\r\n      return (\r\n        <Bars\r\n          width={360}\r\n          height={300}\r\n          margin={{ top: 20, right: 50, bottom: 50, left: 50 }}\r\n          title={`${info.country.value} ${info.indicator.value}`}\r\n          data={chartData.map(d => ({ key: new Date(+d.date, 11, 31), value: d.value }))}\r\n          showXaxis={true}\r\n          showYaxis={true}\r\n          timeYearInterval={Math.min(10, chartData.length)} />\r\n      );\r\n    }\r\n    return (<BackupBars />);\r\n  };\r\n\r\n  const createMultLinesChart = (chartDataT: CountryData[], chartDataC: CountryData[]) => {\r\n    let [t] = chartDataT;\r\n    let [c] = chartDataC;\r\n    if (t && c) {\r\n      let chartData = chartDataT.concat(...chartDataC);\r\n      return (\r\n        <MultiLines\r\n          width={360}\r\n          height={300}\r\n          margin={{ top: 10, right: 50, bottom: 50, left: 50 }}\r\n          titles={[{ indicator: t.indicator.id, title: `${t.country.value} ${t.indicator.value}` },\r\n          { indicator: c.indicator.id, title: `${c.country.value} ${c.indicator.value}` }]}\r\n          data={chartData.map(d =>\r\n            ({ indicator: d.indicator.id, key: new Date(+d.date, 11, 31), value: d.value }))}\r\n          showXaxis={true}\r\n          showYaxis={true}\r\n          timeYearInterval={Math.min(10, chartData.length)} />\r\n      );\r\n    }\r\n    return (<BackupMultiLines />);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BarsButton clicked={barsOnClickHandler} />\r\n      <div className={Styles.row}>\r\n        <div className={[Styles.col2, sideBarOpen ? Styles.col2Open : ''].join(' ')}>\r\n          {props.loadingCountries ? <Spinner /> :\r\n            <SideBar listItems={props.countries.map(\r\n              d => ({ name: d.name, id: d.iso2Code })\r\n            )} clicked={listItemOnClickHandler} />}\r\n        </div>\r\n        <div className={Styles.col3} onClick={clickedHandler}>\r\n          {createLineChart(props.countryGdpData)}\r\n        </div>\r\n        <div className={Styles.col3} onClick={clickedHandler}>\r\n          {createLineChart(props.countryGdpGrowthData)}\r\n        </div>\r\n        <div className={Styles.col3} onClick={clickedHandler}>\r\n          {createPieChart(props.countryExpanseData)}\r\n        </div>\r\n        <div className={Styles.col3} onClick={clickedHandler}>\r\n          {createbarChart(props.countryPopGrowthData)}\r\n        </div>\r\n        <div className={Styles.col3} onClick={clickedHandler}>\r\n          {createLineChart(props.countryPricingData)}\r\n        </div>\r\n        <div className={Styles.col3} onClick={clickedHandler}>\r\n          {createMultLinesChart(props.countryInflationData,\r\n            props.countryPriceDeflatorData)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    loadingCountries: state.fetchCountriesState.loading,\r\n    countries: state.fetchCountriesState.countries,\r\n    countryGdpData: state.fetchDataState.countryGdpData,\r\n    countryGdpGrowthData: state.fetchDataState.countryGdpGrowthData,\r\n    countryPopGrowthData: state.fetchDataState.countryPopGrowthData,\r\n    countryPricingData: state.fetchDataState.countryPricingData,\r\n    countryInflationData: state.fetchDataState.countryInflationData,\r\n    countryExpanseData: state.fetchDataState.countryExpanseData,\r\n    countryPriceDeflatorData: state.fetchDataState.countryPriceDeflatorData,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\r\n  return {\r\n    getCountries: () => dispatch(fetchCountries()),\r\n    getCountryGdpGrowthData: (country: string, indicator: string) =>\r\n      dispatch(fetchData2(country, indicator, fetchGdpGrowthActions)),\r\n    getCountryPopGrowthData: (country: string, indicator: string) =>\r\n      dispatch(fetchData2(country, indicator, fetchPopGrowthActions)),\r\n    getCountryGdpData: (country: string, indicator: string) =>\r\n      dispatch(fetchData2(country, indicator, fetchGdpActions)),\r\n    getCountryPricingData: (country: string, indicator: string) =>\r\n      dispatch(fetchData2(country, indicator, fetchPricingActions)),\r\n    getCountryInflationData: (country: string, indicator: string) =>\r\n      dispatch(fetchData2(country, indicator, fetchInflationActions)),\r\n    getCountryExpanseData: (country: string, indicator: string) =>\r\n      dispatch(fetchData2(country, indicator, fetchExpanseActions)),\r\n    getCountryPriceDeflatorData: (country: string, indicator: string) =>\r\n      dispatch(fetchData2(country, indicator, fetchPriceDeflatorActions)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","/**\n * @fileoverview App component\n */\nimport React from 'react';\nimport Layout from './components/Layout';\n\nconst App: React.FC = () => {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './store';\nimport App from './App';\nimport './index.css';\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}